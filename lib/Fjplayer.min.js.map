{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Fjplayer.min.js","webpack:///webpack/bootstrap 7e450d499155e564c80b","webpack:///./src/index.js","webpack:///./src/Configuration.js","webpack:///./src/constants.js","webpack:///./src/Logger.js","webpack:///./src/Player.js","webpack:///./src/Version.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","global","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","Configuration","undefined","_Configuration","_Configuration2","_Player","_Player2","_Version","context","window","fjplayer","Player","Version","getVersionString","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","setup","playlist","appid","logger","_Logger2","screenMode","autoStart","loop","backLink","checkPlaylist","i","j","list","item","subItem","drm","length","log","Const","FJCONFIG_CLASS","FJCONFIG_CLASSES","indexOf","error","FJCONFIG_TYPE","FJCONFIG_TYPES","FJCONFIG_TITLE","FJCONFIG_SRC","FJCONFIG_POSTER","FJCONFIG_THUMBS","FJCONFIG_DRM","FJCONFIG_DRM_SCHEMES","FJCONFIG_DRM_SCHEME","FJCONFIG_DRM_LICENSE_SERVER","FJCONFIG_DRM_HEADER_LICENSE_REQUEST","FJCONFIG_DRM_HEADER_SEGMENTS_REQUEST","FJCONFIG_SUBTITLES","FJCONFIG_SUB_LABEL","FJCONFIG_SUB_LANG","FJCONFIG_SUB_SRC","FJCONFIG_OVERLAYS","FJCONFIG_OVER_DATA","FJCONFIG_OVER_URL","FJCONFIG_OVER_DURATION","parseInt","FJCONFIG_OVER_SHOW_AT","initialize","fjplaylist","fjappid","fjscreenMode","fjbackLink","fjloop","fjautoStart","toString","getItemsNbr","instance","_constants","_Logger","FJCONFIG_TRUE","FJCONFIG_LOOP","FJCONFIG_START_PLAYING","FJCONFIG_ENABLE_BACK_LINK","FJCONFIG_APP_ID","FJCONFIG_STARTING_MODE","FJCONFIG_ADS_LINK_URL","FJCONFIG_ADS_ESCAPE_AT","FJCONFIG_FALSE","FJCONFIG_CLASS_ADS","FJCONFIG_BOOLEAN","FJCONFIG_CLASS_VOD","FJCONFIG_CLASS_LIVE","FJCONFIG_TYPE_MP4","FJCONFIG_TYPE_DASH","FJCONFIG_DRM_SCHEME_FORJA","FJCONFIG_DRM_SCHEME_CLEARKEY","FJCONFIG_DRM_SCHEME_WIDEVINE","FJCONFIG_DRM_SCHEME_PLAYREADY","Logger","moduleName","debug","useConsole","userServer","serverUrl","serverMethod","serverLogger","method","request","XMLHttpRequest","msg","args","params","Array","slice","arguments","splice","modName","console","apply","encodeURIComponent","open","send","warn","VERSION"],"mappings":"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","file":"Fjplayer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Fjplayer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fjplayer\"] = factory();\n\telse\n\t\troot[\"Fjplayer\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Fjplayer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fjplayer\"] = factory();\n\telse\n\t\troot[\"Fjplayer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Configuration = undefined;\n\t\n\tvar _Configuration = __webpack_require__(1);\n\t\n\tvar _Configuration2 = _interopRequireDefault(_Configuration);\n\t\n\tvar _Player = __webpack_require__(4);\n\t\n\tvar _Player2 = _interopRequireDefault(_Player);\n\t\n\tvar _Version = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Shove both of these into the global scope\n\tvar context = typeof window !== 'undefined' && window || global; /**\n\t                                                                  * The entry point for the library FJplayer.JS\n\t                                                                  */\n\t\n\t\n\tvar fjplayer = context.fjplayer;\n\t\n\tif (!fjplayer) {\n\t  fjplayer = context.fjplayer = {};\n\t}\n\t\n\tfjplayer.Configuration = _Configuration2.default;\n\tfjplayer.Player = _Player2.default;\n\tfjplayer.Version = (0, _Version.getVersionString)();\n\t\n\texports.default = fjplayer;\n\texports.Configuration = _Configuration2.default;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _constants = __webpack_require__(2);\n\t\n\tvar Const = _interopRequireWildcard(_constants);\n\t\n\tvar _Logger = __webpack_require__(3);\n\t\n\tvar _Logger2 = _interopRequireDefault(_Logger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * @module Configuration\n\t * @description The Configuration is the primary module used to set configuration and .\n\t */\n\tfunction Configuration() {\n\t    var instance = void 0,\n\t        playlist = void 0,\n\t        appid = void 0,\n\t        screenMode = void 0,\n\t        autoStart = void 0,\n\t        loop = void 0,\n\t        logger = void 0,\n\t        backLink = void 0;\n\t\n\t    function setup() {\n\t        playlist = [];\n\t        appid = '';\n\t        logger = new _Logger2.default('Configuration');\n\t        screenMode = false;\n\t        autoStart = false;\n\t        loop = false;\n\t        backLink = false;\n\t    }\n\t\n\t    function checkPlaylist() {\n\t        var item = {};\n\t        var subItem = {};\n\t        var drm = {};\n\t        var i, j, list;\n\t        if (playlist === undefined) {\n\t            return false;\n\t        }\n\t        if (playlist.length <= 0) {\n\t            return false;\n\t        }\n\t        logger.log(' playlist count ', playlist.length);\n\t        for (i = 0; i < playlist.length; i++) {\n\t            item = playlist[i];\n\t            // check item\n\t            logger.log(' playlist class of item  ', i, 'is', item[Const.FJCONFIG_CLASS]);\n\t            if (Const.FJCONFIG_CLASSES.indexOf(item[Const.FJCONFIG_CLASS]) === -1) {\n\t                logger.error('BAD class Value ! ');\n\t                return false;\n\t            }\n\t            logger.log(' playlist type of item  ', i, 'is', item[Const.FJCONFIG_TYPE]);\n\t            if (Const.FJCONFIG_TYPES.indexOf(item[Const.FJCONFIG_TYPE]) === -1) {\n\t                logger.error('BAD type Value ! ');\n\t                return false;\n\t            }\n\t            logger.log(' playlist title of item  ', i, 'is', item[Const.FJCONFIG_TITLE]);\n\t            if (!item[Const.FJCONFIG_TITLE]) {\n\t                logger.error('BAD title Value ! ');\n\t                return false;\n\t            }\n\t            logger.log(' playlist src of item  ', i, 'is', item[Const.FJCONFIG_SRC]);\n\t            if (!item[Const.FJCONFIG_SRC]) {\n\t                logger.error('BAD src Value ! ');\n\t                return false;\n\t            }\n\t            logger.log(' playlist poster of item  ', i, 'is', item[Const.FJCONFIG_POSTER]);\n\t            logger.log(' playlist thumbs of item  ', i, 'is', item[Const.FJCONFIG_THUMBS]);\n\t\n\t            // check drm\n\t            drm = playlist[Const.FJCONFIG_DRM];\n\t            if (drm !== undefined) {\n\t                if (Const.FJCONFIG_DRM_SCHEMES.indexOf(drm[Const.FJCONFIG_DRM_SCHEME]) === -1) {\n\t                    logger.error('BAD DRM Scheme Value ! ', drm[Const.FJCONFIG_DRM_SCHEME]);\n\t                    return false;\n\t                }\n\t                if (drm[Const.FJCONFIG_DRM_LICENSE_SERVER]) {\n\t                    logger.log(' playlist Server License of item  ', i, 'is', drm[Const.FJCONFIG_DRM_LICENSE_SERVER]);\n\t                } else {\n\t                    logger.error('Empty Server License for  DRM Scheme  ! ');\n\t                    return false;\n\t                }\n\t                logger.log(' playlist Drm Herders on Request License  of item  ', i, drm[Const.FJCONFIG_DRM_HEADER_LICENSE_REQUEST]);\n\t                logger.log(' playlist Drm Herders on Request Segments  of item  ', i, drm[Const.FJCONFIG_DRM_HEADER_SEGMENTS_REQUEST]);\n\t            }\n\t            // check subtitles\n\t            list = item[Const.FJCONFIG_SUBTITLES];\n\t            if (list !== undefined && list.length > 0) {\n\t                for (j = 0; j < list.length; j++) {\n\t                    subItem = list[j];\n\t                    if (subItem[Const.FJCONFIG_SUB_LABEL]) {\n\t                        logger.log(' playlist Subtitle label ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_SUB_LABEL]);\n\t                    } else {\n\t                        logger.error('Empty Subtitle label ', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                    if (subItem[Const.FJCONFIG_SUB_LANG]) {\n\t                        logger.log(' playlist Subtitle lang ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_SUB_LANG]);\n\t                    } else {\n\t                        logger.error('Empty Subtitle lang ', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                    if (subItem[Const.FJCONFIG_SUB_SRC]) {\n\t                        logger.log(' playlist Subtitle src ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_SUB_SRC]);\n\t                    } else {\n\t                        logger.error('Empty Subtitle src ', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // check overlays\n\t            list = item[Const.FJCONFIG_OVERLAYS];\n\t            if (list !== undefined && list.length > 0) {\n\t                for (j = 0; j < list.length; j++) {\n\t                    subItem = list[j];\n\t                    if (subItem[Const.FJCONFIG_OVER_DATA]) {\n\t                        logger.log(' playlist Overlay data ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_OVER_DATA]);\n\t                    } else {\n\t                        logger.error('Empty Overlay data', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                    if (subItem[Const.FJCONFIG_OVER_URL]) {\n\t                        logger.log(' playlist Overlay url ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_OVER_URL]);\n\t                    } else {\n\t                        logger.error('Empty Overlay url', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                    if (subItem[Const.FJCONFIG_OVER_DURATION]) {\n\t                        if (subItem[Const.FJCONFIG_OVER_DURATION] === parseInt(subItem[Const.FJCONFIG_OVER_DURATION], 10)) {\n\t                            logger.log(' playlist Overlay duration ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_OVER_DURATION]);\n\t                        } else {\n\t                            logger.error('Empty Overlay duration ', j, ' of item ! ', i, 'is not integer !');\n\t                            return false;\n\t                        }\n\t                    } else {\n\t                        logger.error('Empty Overlay duration ', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                    if (subItem[Const.FJCONFIG_OVER_SHOW_AT]) {\n\t                        if (subItem[Const.FJCONFIG_OVER_SHOW_AT] === parseInt(subItem[Const.FJCONFIG_OVER_SHOW_AT], 10)) {\n\t                            logger.log(' playlist Overlay show at ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_OVER_SHOW_AT]);\n\t                        } else {\n\t                            logger.error('Empty Overlay show at ', j, ' of item ! ', i, 'is not integer !');\n\t                            return false;\n\t                        }\n\t                    } else {\n\t                        logger.error('Empty Overlay show at ', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        logger.log('playlist cofiguration is ok ');\n\t        return true;\n\t    }\n\t\n\t    function initialize(fjplaylist, fjappid, fjscreenMode, fjbackLink, fjloop, fjautoStart) {\n\t        if (fjautoStart === true || fjautoStart === false) {\n\t            autoStart = fjautoStart;\n\t        } else {\n\t            autoStart = false;\n\t        }\n\t        if (fjloop === true || fjloop === false) {\n\t            loop = fjloop;\n\t        } else {\n\t            loop = false;\n\t        }\n\t        if (fjbackLink === true || fjbackLink === false) {\n\t            backLink = fjbackLink;\n\t        } else {\n\t            backLink = false;\n\t        }\n\t        playlist = fjplaylist;\n\t        screenMode = fjscreenMode;\n\t        appid = fjappid;\n\t        return checkPlaylist();\n\t    }\n\t\n\t    function toString() {\n\t        return 'loop:' + loop + ', autostart:' + autoStart + ', appid:' + appid + ', screenMode:' + screenMode + ', backLink:' + backLink;\n\t    }\n\t\n\t    function getItemsNbr() {\n\t        return playlist.length;\n\t    }\n\t\n\t    instance = {\n\t        initialize: initialize,\n\t        toString: toString,\n\t        getItemsNbr: getItemsNbr\n\t    };\n\t\n\t    setup();\n\t\n\t    return instance;\n\t};\n\t// let configuration = Configuration();\n\t\n\texports.default = Configuration;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * @module Constants\n\t */\n\tvar FJCONFIG_LOOP = exports.FJCONFIG_LOOP = 'FJLoop';\n\tvar FJCONFIG_START_PLAYING = exports.FJCONFIG_START_PLAYING = 'FJStartplaying';\n\tvar FJCONFIG_ENABLE_BACK_LINK = exports.FJCONFIG_ENABLE_BACK_LINK = 'FJEnableFullScreenBackLink';\n\tvar FJCONFIG_APP_ID = exports.FJCONFIG_APP_ID = 'FJAppId';\n\tvar FJCONFIG_STARTING_MODE = exports.FJCONFIG_STARTING_MODE = 'FJStartingMode';\n\tvar FJCONFIG_CLASS = exports.FJCONFIG_CLASS = 'FJClass';\n\tvar FJCONFIG_TYPE = exports.FJCONFIG_TYPE = 'FJType';\n\tvar FJCONFIG_TITLE = exports.FJCONFIG_TITLE = 'FJTitle';\n\tvar FJCONFIG_SRC = exports.FJCONFIG_SRC = 'FJSrc';\n\tvar FJCONFIG_POSTER = exports.FJCONFIG_POSTER = 'FJPoster';\n\tvar FJCONFIG_ADS_LINK_URL = exports.FJCONFIG_ADS_LINK_URL = 'FJAdsLinkUrl';\n\tvar FJCONFIG_ADS_ESCAPE_AT = exports.FJCONFIG_ADS_ESCAPE_AT = 'FJAdsEscapeAt';\n\tvar FJCONFIG_THUMBS = exports.FJCONFIG_THUMBS = 'FJThumbs';\n\tvar FJCONFIG_SUBTITLES = exports.FJCONFIG_SUBTITLES = 'FJSubtitles';\n\tvar FJCONFIG_OVERLAYS = exports.FJCONFIG_OVERLAYS = 'FJOverlays';\n\tvar FJCONFIG_DRM = exports.FJCONFIG_DRM = 'FJDrm';\n\tvar FJCONFIG_SUB_LABEL = exports.FJCONFIG_SUB_LABEL = 'FJSubLabel';\n\tvar FJCONFIG_SUB_SRC = exports.FJCONFIG_SUB_SRC = 'FJSubSrc';\n\tvar FJCONFIG_SUB_LANG = exports.FJCONFIG_SUB_LANG = 'FJSubLang';\n\tvar FJCONFIG_OVER_DATA = exports.FJCONFIG_OVER_DATA = 'FJOverData';\n\tvar FJCONFIG_OVER_URL = exports.FJCONFIG_OVER_URL = 'FJOverUrl';\n\tvar FJCONFIG_OVER_DURATION = exports.FJCONFIG_OVER_DURATION = 'FJOverDuration';\n\tvar FJCONFIG_OVER_SHOW_AT = exports.FJCONFIG_OVER_SHOW_AT = 'FJOverShowAt';\n\tvar FJCONFIG_DRM_SCHEME = exports.FJCONFIG_DRM_SCHEME = 'FJDrmScheme';\n\tvar FJCONFIG_DRM_LICENSE_SERVER = exports.FJCONFIG_DRM_LICENSE_SERVER = 'FJLicenceServer';\n\tvar FJCONFIG_DRM_HEADER_LICENSE_REQUEST = exports.FJCONFIG_DRM_HEADER_LICENSE_REQUEST = 'FJHeadersOnLicenseRequest';\n\tvar FJCONFIG_DRM_HEADER_SEGMENTS_REQUEST = exports.FJCONFIG_DRM_HEADER_SEGMENTS_REQUEST = 'FJHeadersOnSegmentsRequest';\n\t\n\tvar FJCONFIG_TRUE = exports.FJCONFIG_TRUE = 'true';\n\tvar FJCONFIG_FALSE = exports.FJCONFIG_FALSE = 'false';\n\tvar FJCONFIG_BOOLEAN = exports.FJCONFIG_BOOLEAN = { FJCONFIG_TRUE: FJCONFIG_TRUE, FJCONFIG_FALSE: FJCONFIG_FALSE };\n\t\n\tvar FJCONFIG_CLASS_ADS = exports.FJCONFIG_CLASS_ADS = 'ads';\n\tvar FJCONFIG_CLASS_VOD = exports.FJCONFIG_CLASS_VOD = 'vod';\n\tvar FJCONFIG_CLASS_LIVE = exports.FJCONFIG_CLASS_LIVE = 'live';\n\tvar FJCONFIG_CLASSES = exports.FJCONFIG_CLASSES = [FJCONFIG_CLASS_ADS, FJCONFIG_CLASS_LIVE, FJCONFIG_CLASS_VOD];\n\t\n\tvar FJCONFIG_TYPE_MP4 = exports.FJCONFIG_TYPE_MP4 = 'video/mp4';\n\tvar FJCONFIG_TYPE_DASH = exports.FJCONFIG_TYPE_DASH = 'dash';\n\tvar FJCONFIG_TYPES = exports.FJCONFIG_TYPES = [FJCONFIG_TYPE_MP4, FJCONFIG_TYPE_DASH];\n\t\n\tvar FJCONFIG_DRM_SCHEME_FORJA = exports.FJCONFIG_DRM_SCHEME_FORJA = 'forja';\n\tvar FJCONFIG_DRM_SCHEME_CLEARKEY = exports.FJCONFIG_DRM_SCHEME_CLEARKEY = 'clearKey';\n\tvar FJCONFIG_DRM_SCHEME_WIDEVINE = exports.FJCONFIG_DRM_SCHEME_WIDEVINE = 'widevine';\n\tvar FJCONFIG_DRM_SCHEME_PLAYREADY = exports.FJCONFIG_DRM_SCHEME_PLAYREADY = 'playReady';\n\tvar FJCONFIG_DRM_SCHEMES = exports.FJCONFIG_DRM_SCHEMES = [FJCONFIG_DRM_SCHEME_FORJA, FJCONFIG_DRM_SCHEME_CLEARKEY, FJCONFIG_DRM_SCHEME_WIDEVINE, FJCONFIG_DRM_SCHEME_PLAYREADY];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * @module Logger\n\t * @description The Configuration is the primary module used to set configuration and .\n\t */\n\t\n\tfunction Logger(moduleName) {\n\t\n\t    var instance = void 0,\n\t        userServer = void 0,\n\t        serverLogger = void 0,\n\t        method = void 0,\n\t        request = void 0,\n\t        modName = '[' + moduleName + ']',\n\t        useConsole = void 0;\n\t\n\t    function setup(debug) {\n\t        useConsole = debug;\n\t        userServer = false;\n\t    }\n\t\n\t    function initialize(serverUrl, serverMethod) {\n\t        serverLogger = serverUrl;\n\t        method = serverMethod;\n\t        request = new XMLHttpRequest();\n\t        userServer = true;\n\t    }\n\t\n\t    function error() {\n\t        var msg;\n\t        var i;\n\t        var args;\n\t        var params;\n\t        args = Array.prototype.slice.call(arguments);\n\t        args.splice(0, 0, modName);\n\t        if (useConsole) {\n\t            console.error.apply(console, args);\n\t        }\n\t        if (userServer) {\n\t            for (i = 0; i < arguments.length; i++) {\n\t                msg = msg + arguments[i];\n\t            }\n\t            params = 'msg=' + modName + ' ERROR: ' + encodeURIComponent(msg);\n\t            request.open(method, serverLogger);\n\t            request.send(params);\n\t        }\n\t    }\n\t\n\t    function warn() {\n\t        var msg;\n\t        var i;\n\t        var args;\n\t        var params;\n\t        args = Array.prototype.slice.call(arguments);\n\t        args.splice(0, 0, modName);\n\t        if (useConsole) {\n\t            console.warn.apply(console, args);\n\t        }\n\t        if (userServer) {\n\t            for (i = 0; i < arguments.length; i++) {\n\t                msg = msg + arguments[i];\n\t            }\n\t            params = 'msg=' + modName + ' WARN: ' + encodeURIComponent(msg);\n\t            request.open(method, serverLogger);\n\t            request.send(params);\n\t        }\n\t    }\n\t\n\t    function log() {\n\t        var msg;\n\t        var i;\n\t        var args;\n\t        var params;\n\t        args = Array.prototype.slice.call(arguments);\n\t        args.splice(0, 0, modName);\n\t        if (useConsole) {\n\t            console.log.apply(console, args);\n\t        }\n\t        if (userServer) {\n\t            for (i = 0; i < arguments.length; i++) {\n\t                msg = msg + arguments[i];\n\t            }\n\t            params = 'msg=' + modName + ' LOG: ' + encodeURIComponent(msg);\n\t            request.open(method, serverLogger);\n\t            request.send(params);\n\t        }\n\t    }\n\t    instance = {\n\t        initialize: initialize,\n\t        error: error,\n\t        warn: warn,\n\t        log: log\n\t    };\n\t\n\t    setup(true);\n\t\n\t    return instance;\n\t};\n\t\n\texports.default = Logger;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _constants = __webpack_require__(2);\n\t\n\tvar Const = _interopRequireWildcard(_constants);\n\t\n\tvar _Logger = __webpack_require__(3);\n\t\n\tvar _Logger2 = _interopRequireDefault(_Logger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * @module Player\n\t * @description The Player is the player module used to play items.\n\t */\n\tfunction Player() {\n\t    var instance = void 0,\n\t        playlist = void 0,\n\t        appid = void 0,\n\t        screenMode = void 0,\n\t        autoStart = void 0,\n\t        loop = void 0,\n\t        logger = void 0,\n\t        backLink = void 0;\n\t\n\t    function setup() {\n\t        playlist = [];\n\t        appid = '';\n\t        logger = new _Logger2.default('Configuration');\n\t        screenMode = false;\n\t        autoStart = false;\n\t        loop = false;\n\t        backLink = false;\n\t    }\n\t\n\t    function checkPlaylist() {\n\t        var item = {};\n\t        var subItem = {};\n\t        var drm = {};\n\t        var i, j, list;\n\t        if (playlist === undefined) {\n\t            return false;\n\t        }\n\t        if (playlist.length <= 0) {\n\t            return false;\n\t        }\n\t        logger.log(' playlist count ', playlist.length);\n\t        for (i = 0; i < playlist.length; i++) {\n\t            item = playlist[i];\n\t            // check item\n\t            logger.log(' playlist class of item  ', i, 'is', item[Const.FJCONFIG_CLASS]);\n\t            if (Const.FJCONFIG_CLASSES.indexOf(item[Const.FJCONFIG_CLASS]) === -1) {\n\t                logger.error('BAD class Value ! ');\n\t                return false;\n\t            }\n\t            logger.log(' playlist type of item  ', i, 'is', item[Const.FJCONFIG_TYPE]);\n\t            if (Const.FJCONFIG_TYPES.indexOf(item[Const.FJCONFIG_TYPE]) === -1) {\n\t                logger.error('BAD type Value ! ');\n\t                return false;\n\t            }\n\t            logger.log(' playlist title of item  ', i, 'is', item[Const.FJCONFIG_TITLE]);\n\t            if (!item[Const.FJCONFIG_TITLE]) {\n\t                logger.error('BAD title Value ! ');\n\t                return false;\n\t            }\n\t            logger.log(' playlist src of item  ', i, 'is', item[Const.FJCONFIG_SRC]);\n\t            if (!item[Const.FJCONFIG_SRC]) {\n\t                logger.error('BAD src Value ! ');\n\t                return false;\n\t            }\n\t            logger.log(' playlist poster of item  ', i, 'is', item[Const.FJCONFIG_POSTER]);\n\t            logger.log(' playlist thumbs of item  ', i, 'is', item[Const.FJCONFIG_THUMBS]);\n\t\n\t            // check drm\n\t            drm = playlist[Const.FJCONFIG_DRM];\n\t            if (drm !== undefined) {\n\t                if (Const.FJCONFIG_DRM_SCHEMES.indexOf(drm[Const.FJCONFIG_DRM_SCHEME]) === -1) {\n\t                    logger.error('BAD DRM Scheme Value ! ', drm[Const.FJCONFIG_DRM_SCHEME]);\n\t                    return false;\n\t                }\n\t                if (drm[Const.FJCONFIG_DRM_LICENSE_SERVER]) {\n\t                    logger.log(' playlist Server License of item  ', i, 'is', drm[Const.FJCONFIG_DRM_LICENSE_SERVER]);\n\t                } else {\n\t                    logger.error('Empty Server License for  DRM Scheme  ! ');\n\t                    return false;\n\t                }\n\t                logger.log(' playlist Drm Herders on Request License  of item  ', i, drm[Const.FJCONFIG_DRM_HEADER_LICENSE_REQUEST]);\n\t                logger.log(' playlist Drm Herders on Request Segments  of item  ', i, drm[Const.FJCONFIG_DRM_HEADER_SEGMENTS_REQUEST]);\n\t            }\n\t            // check subtitles\n\t            list = item[Const.FJCONFIG_SUBTITLES];\n\t            if (list !== undefined && list.length > 0) {\n\t                for (j = 0; j < list.length; j++) {\n\t                    subItem = list[j];\n\t                    if (subItem[Const.FJCONFIG_SUB_LABEL]) {\n\t                        logger.log(' playlist Subtitle label ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_SUB_LABEL]);\n\t                    } else {\n\t                        logger.error('Empty Subtitle label ', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                    if (subItem[Const.FJCONFIG_SUB_LANG]) {\n\t                        logger.log(' playlist Subtitle lang ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_SUB_LANG]);\n\t                    } else {\n\t                        logger.error('Empty Subtitle lang ', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                    if (subItem[Const.FJCONFIG_SUB_SRC]) {\n\t                        logger.log(' playlist Subtitle src ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_SUB_SRC]);\n\t                    } else {\n\t                        logger.error('Empty Subtitle src ', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // check overlays\n\t            list = item[Const.FJCONFIG_OVERLAYS];\n\t            if (list !== undefined && list.length > 0) {\n\t                for (j = 0; j < list.length; j++) {\n\t                    subItem = list[j];\n\t                    if (subItem[Const.FJCONFIG_OVER_DATA]) {\n\t                        logger.log(' playlist Overlay data ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_OVER_DATA]);\n\t                    } else {\n\t                        logger.error('Empty Overlay data', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                    if (subItem[Const.FJCONFIG_OVER_URL]) {\n\t                        logger.log(' playlist Overlay url ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_OVER_URL]);\n\t                    } else {\n\t                        logger.error('Empty Overlay url', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                    if (subItem[Const.FJCONFIG_OVER_DURATION]) {\n\t                        if (subItem[Const.FJCONFIG_OVER_DURATION] === parseInt(subItem[Const.FJCONFIG_OVER_DURATION], 10)) {\n\t                            logger.log(' playlist Overlay duration ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_OVER_DURATION]);\n\t                        } else {\n\t                            logger.error('Empty Overlay duration ', j, ' of item ! ', i, 'is not integer !');\n\t                            return false;\n\t                        }\n\t                    } else {\n\t                        logger.error('Empty Overlay duration ', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                    if (subItem[Const.FJCONFIG_OVER_SHOW_AT]) {\n\t                        if (subItem[Const.FJCONFIG_OVER_SHOW_AT] === parseInt(subItem[Const.FJCONFIG_OVER_SHOW_AT], 10)) {\n\t                            logger.log(' playlist Overlay show at ', j, ' of item  ', i, 'is', subItem[Const.FJCONFIG_OVER_SHOW_AT]);\n\t                        } else {\n\t                            logger.error('Empty Overlay show at ', j, ' of item ! ', i, 'is not integer !');\n\t                            return false;\n\t                        }\n\t                    } else {\n\t                        logger.error('Empty Overlay show at ', j, ' of item ! ', i);\n\t                        return false;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        logger.log('playlist cofiguration is ok ');\n\t        return true;\n\t    }\n\t\n\t    function initialize(fjplaylist, fjappid, fjscreenMode, fjbackLink, fjloop, fjautoStart) {\n\t        if (fjautoStart === true || fjautoStart === false) {\n\t            autoStart = fjautoStart;\n\t        } else {\n\t            autoStart = false;\n\t        }\n\t        if (fjloop === true || fjloop === false) {\n\t            loop = fjloop;\n\t        } else {\n\t            loop = false;\n\t        }\n\t        if (fjbackLink === true || fjbackLink === false) {\n\t            backLink = fjbackLink;\n\t        } else {\n\t            backLink = false;\n\t        }\n\t        playlist = fjplaylist;\n\t        screenMode = fjscreenMode;\n\t        appid = fjappid;\n\t        return checkPlaylist();\n\t    }\n\t\n\t    function toString() {\n\t        return 'loop:' + loop + ', autostart:' + autoStart + ', appid:' + appid + ', screenMode:' + screenMode + ', backLink:' + backLink;\n\t    }\n\t\n\t    function getItemsNbr() {\n\t        return playlist.length;\n\t    }\n\t\n\t    instance = {\n\t        initialize: initialize,\n\t        toString: toString,\n\t        getItemsNbr: getItemsNbr\n\t    };\n\t\n\t    setup();\n\t\n\t    return instance;\n\t};\n\t\n\texports.default = Player;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.getVersionString = getVersionString;\n\tvar VERSION = '0.2.0';\n\t\n\tfunction getVersionString() {\n\t    return VERSION;\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** Fjplayer.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7e450d499155e564c80b\n **/","/**\n * The entry point for the library FJplayer.JS\n */\nimport Configuration from './Configuration';\nimport Player from './Player';\nimport { getVersionString } from './Version';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar fjplayer = context.fjplayer;\n\nif (!fjplayer) {\n    fjplayer = context.fjplayer = {};\n}\n\nfjplayer.Configuration = Configuration;\nfjplayer.Player = Player;\nfjplayer.Version = getVersionString();\n\nexport default fjplayer;\nexport { Configuration };\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","import * as Const from './constants';\nimport Logger from './Logger';\n\n/**\n * @module Configuration\n * @description The Configuration is the primary module used to set configuration and .\n */\nfunction Configuration() {\n    let instance,\n        playlist,\n        appid,\n        screenMode,\n        autoStart,\n        loop,\n        logger,\n        backLink;\n\n    function setup() {\n        playlist = [];\n        appid = '';\n        logger = new Logger('Configuration');\n        screenMode = false;\n        autoStart = false;\n        loop = false;\n        backLink = false;\n    }\n\n    function checkPlaylist() {\n        var item = {};\n        var subItem = {};\n        var drm = {};\n        var i, j, list;\n        if (playlist === undefined) {\n            return false;\n        }\n        if (playlist.length <= 0) {\n            return false;\n        }\n        logger.log(' playlist count ', playlist.length);\n        for (i = 0; i < playlist.length; i++) {\n            item = playlist[i];\n            // check item\n            logger.log(' playlist class of item  ', i, 'is', item[Const.FJCONFIG_CLASS]);\n            if (Const.FJCONFIG_CLASSES.indexOf(item[Const.FJCONFIG_CLASS]) === -1) {\n                logger.error('BAD class Value ! ');\n                return false;\n            }\n            logger.log(' playlist type of item  ', i, 'is', item[Const.FJCONFIG_TYPE]);\n            if (Const.FJCONFIG_TYPES.indexOf(item[Const.FJCONFIG_TYPE]) === -1) {\n                logger.error('BAD type Value ! ');\n                return false;\n            }\n            logger.log(' playlist title of item  ', i, 'is', item[Const.FJCONFIG_TITLE]);\n            if (!item[Const.FJCONFIG_TITLE]) {\n                logger.error('BAD title Value ! ');\n                return false;\n            }\n            logger.log(' playlist src of item  ', i, 'is', item[Const.FJCONFIG_SRC]);\n            if (!item[Const.FJCONFIG_SRC]) {\n                logger.error('BAD src Value ! ');\n                return false;\n            }\n            logger.log(' playlist poster of item  ', i, 'is', item[Const.FJCONFIG_POSTER]);\n            logger.log(' playlist thumbs of item  ', i, 'is', item[Const.FJCONFIG_THUMBS]);\n\n            // check drm\n            drm = playlist[Const.FJCONFIG_DRM];\n            if (drm !== undefined) {\n                if (Const.FJCONFIG_DRM_SCHEMES.indexOf(drm[Const.FJCONFIG_DRM_SCHEME]) === -1) {\n                    logger.error('BAD DRM Scheme Value ! ', drm[Const.FJCONFIG_DRM_SCHEME]);\n                    return false;\n                }\n                if (drm[Const.FJCONFIG_DRM_LICENSE_SERVER]) {\n                    logger.log(' playlist Server License of item  ', i, 'is', drm[Const.FJCONFIG_DRM_LICENSE_SERVER]);\n                } else {\n                    logger.error('Empty Server License for  DRM Scheme  ! ');\n                    return false;\n                }\n                logger.log(' playlist Drm Herders on Request License  of item  ',\n                    i, drm[Const.FJCONFIG_DRM_HEADER_LICENSE_REQUEST]);\n                logger.log(' playlist Drm Herders on Request Segments  of item  ',\n                    i, drm[Const.FJCONFIG_DRM_HEADER_SEGMENTS_REQUEST]);\n            }\n            // check subtitles\n            list = item[Const.FJCONFIG_SUBTITLES];\n            if ((list !== undefined) && (list.length > 0)) {\n                for (j = 0; j < list.length; j++) {\n                    subItem = list[j];\n                    if (subItem[Const.FJCONFIG_SUB_LABEL]) {\n                        logger.log(' playlist Subtitle label ', j, ' of item  ', i, 'is',\n                            subItem[Const.FJCONFIG_SUB_LABEL]);\n                    } else {\n                        logger.error('Empty Subtitle label ', j, ' of item ! ', i);\n                        return false;\n                    }\n                    if (subItem[Const.FJCONFIG_SUB_LANG]) {\n                        logger.log(' playlist Subtitle lang ', j, ' of item  ', i, 'is',\n                            subItem[Const.FJCONFIG_SUB_LANG]);\n                    } else {\n                        logger.error('Empty Subtitle lang ', j, ' of item ! ', i);\n                        return false;\n                    }\n                    if (subItem[Const.FJCONFIG_SUB_SRC]) {\n                        logger.log(' playlist Subtitle src ', j, ' of item  ', i, 'is',\n                            subItem[Const.FJCONFIG_SUB_SRC]);\n                    } else {\n                        logger.error('Empty Subtitle src ', j, ' of item ! ', i);\n                        return false;\n                    }\n                }\n            }\n\n            // check overlays\n            list = item[Const.FJCONFIG_OVERLAYS];\n            if ((list !== undefined) && (list.length > 0)) {\n                for (j = 0; j < list.length; j++) {\n                    subItem = list[j];\n                    if (subItem[Const.FJCONFIG_OVER_DATA]) {\n                        logger.log(' playlist Overlay data ', j, ' of item  ', i, 'is',\n                            subItem[Const.FJCONFIG_OVER_DATA]);\n                    } else {\n                        logger.error('Empty Overlay data', j, ' of item ! ', i);\n                        return false;\n                    }\n                    if (subItem[Const.FJCONFIG_OVER_URL]) {\n                        logger.log(' playlist Overlay url ', j, ' of item  ', i, 'is',\n                            subItem[Const.FJCONFIG_OVER_URL]);\n                    } else {\n                        logger.error('Empty Overlay url', j, ' of item ! ', i);\n                        return false;\n                    }\n                    if (subItem[Const.FJCONFIG_OVER_DURATION]) {\n                        if ((subItem[Const.FJCONFIG_OVER_DURATION] ===\n                                parseInt(subItem[Const.FJCONFIG_OVER_DURATION], 10))) {\n                            logger.log(' playlist Overlay duration ', j, ' of item  ', i, 'is',\n                                subItem[Const.FJCONFIG_OVER_DURATION]);\n                        } else {\n                            logger.error('Empty Overlay duration ', j, ' of item ! ', i, 'is not integer !');\n                            return false;\n                        }\n                    } else {\n                        logger.error('Empty Overlay duration ', j, ' of item ! ', i);\n                        return false;\n                    }\n                    if (subItem[Const.FJCONFIG_OVER_SHOW_AT]) {\n                        if ((subItem[Const.FJCONFIG_OVER_SHOW_AT] ===\n                                parseInt(subItem[Const.FJCONFIG_OVER_SHOW_AT], 10))) {\n                            logger.log(' playlist Overlay show at ', j, ' of item  ', i, 'is',\n                                subItem[Const.FJCONFIG_OVER_SHOW_AT]);\n                        } else {\n                            logger.error('Empty Overlay show at ', j, ' of item ! ', i, 'is not integer !');\n                            return false;\n                        }\n                    } else {\n                        logger.error('Empty Overlay show at ', j, ' of item ! ', i);\n                        return false;\n                    }\n                }\n            }\n        }\n        logger.log('playlist cofiguration is ok ');\n        return true;\n    }\n\n    function initialize(fjplaylist, fjappid, fjscreenMode, fjbackLink, fjloop, fjautoStart) {\n        if (fjautoStart === true || fjautoStart === false) {\n            autoStart = fjautoStart;\n        } else {\n            autoStart = false;\n        }\n        if (fjloop === true || fjloop === false) {\n            loop = fjloop;\n        } else {\n            loop = false;\n        }\n        if (fjbackLink === true || fjbackLink === false) {\n            backLink = fjbackLink;\n        } else {\n            backLink = false;\n        }\n        playlist = fjplaylist;\n        screenMode = fjscreenMode;\n        appid = fjappid;\n        return checkPlaylist();\n    }\n\n    function toString() {\n        return 'loop:' + loop + ', autostart:' + autoStart +\n            ', appid:' + appid + ', screenMode:' + screenMode + ', backLink:' + backLink;\n    }\n\n    function getItemsNbr() {\n        return playlist.length;\n    }\n\n    instance = {\n        initialize: initialize,\n        toString: toString,\n        getItemsNbr: getItemsNbr\n    };\n\n    setup();\n\n    return instance;\n};\n// let configuration = Configuration();\n\nexport default Configuration;\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Configuration.js\n **/","/**\n * @module Constants\n */\nexport const FJCONFIG_LOOP = 'FJLoop';\nexport const FJCONFIG_START_PLAYING = 'FJStartplaying';\nexport const FJCONFIG_ENABLE_BACK_LINK = 'FJEnableFullScreenBackLink';\nexport const FJCONFIG_APP_ID = 'FJAppId';\nexport const FJCONFIG_STARTING_MODE = 'FJStartingMode';\nexport const FJCONFIG_CLASS = 'FJClass';\nexport const FJCONFIG_TYPE = 'FJType';\nexport const FJCONFIG_TITLE = 'FJTitle';\nexport const FJCONFIG_SRC = 'FJSrc';\nexport const FJCONFIG_POSTER = 'FJPoster';\nexport const FJCONFIG_ADS_LINK_URL = 'FJAdsLinkUrl';\nexport const FJCONFIG_ADS_ESCAPE_AT = 'FJAdsEscapeAt';\nexport const FJCONFIG_THUMBS = 'FJThumbs';\nexport const FJCONFIG_SUBTITLES = 'FJSubtitles';\nexport const FJCONFIG_OVERLAYS = 'FJOverlays';\nexport const FJCONFIG_DRM = 'FJDrm';\nexport const FJCONFIG_SUB_LABEL = 'FJSubLabel';\nexport const FJCONFIG_SUB_SRC = 'FJSubSrc';\nexport const FJCONFIG_SUB_LANG = 'FJSubLang';\nexport const FJCONFIG_OVER_DATA = 'FJOverData';\nexport const FJCONFIG_OVER_URL = 'FJOverUrl';\nexport const FJCONFIG_OVER_DURATION = 'FJOverDuration';\nexport const FJCONFIG_OVER_SHOW_AT = 'FJOverShowAt';\nexport const FJCONFIG_DRM_SCHEME = 'FJDrmScheme';\nexport const FJCONFIG_DRM_LICENSE_SERVER = 'FJLicenceServer';\nexport const FJCONFIG_DRM_HEADER_LICENSE_REQUEST = 'FJHeadersOnLicenseRequest';\nexport const FJCONFIG_DRM_HEADER_SEGMENTS_REQUEST = 'FJHeadersOnSegmentsRequest';\n\nexport const FJCONFIG_TRUE = 'true';\nexport const FJCONFIG_FALSE = 'false';\nexport const FJCONFIG_BOOLEAN = { FJCONFIG_TRUE, FJCONFIG_FALSE };\n\nexport const FJCONFIG_CLASS_ADS = 'ads';\nexport const FJCONFIG_CLASS_VOD = 'vod';\nexport const FJCONFIG_CLASS_LIVE = 'live';\nexport const FJCONFIG_CLASSES = [FJCONFIG_CLASS_ADS, FJCONFIG_CLASS_LIVE, FJCONFIG_CLASS_VOD];\n\nexport const FJCONFIG_TYPE_MP4 = 'video/mp4';\nexport const FJCONFIG_TYPE_DASH = 'dash';\nexport const FJCONFIG_TYPES = [FJCONFIG_TYPE_MP4, FJCONFIG_TYPE_DASH];\n\nexport const FJCONFIG_DRM_SCHEME_FORJA = 'forja';\nexport const FJCONFIG_DRM_SCHEME_CLEARKEY = 'clearKey';\nexport const FJCONFIG_DRM_SCHEME_WIDEVINE = 'widevine';\nexport const FJCONFIG_DRM_SCHEME_PLAYREADY = 'playReady';\nexport const FJCONFIG_DRM_SCHEMES = [\n    FJCONFIG_DRM_SCHEME_FORJA,\n    FJCONFIG_DRM_SCHEME_CLEARKEY,\n    FJCONFIG_DRM_SCHEME_WIDEVINE,\n    FJCONFIG_DRM_SCHEME_PLAYREADY\n];\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/constants.js\n **/","/**\n * @module Logger\n * @description The Configuration is the primary module used to set configuration and .\n */\n\nfunction Logger(moduleName) {\n\n    let instance,\n        userServer,\n        serverLogger,\n        method,\n        request,\n        modName = '[' + moduleName + ']',\n        useConsole;\n\n    function setup(debug) {\n        useConsole = debug;\n        userServer = false;\n    }\n\n    function initialize(serverUrl, serverMethod) {\n        serverLogger = serverUrl;\n        method = serverMethod;\n        request = new XMLHttpRequest();\n        userServer = true;\n    }\n\n    function error() {\n        var msg;\n        var i;\n        var args;\n        var params;\n        args = Array.prototype.slice.call(arguments);\n        args.splice(0, 0, modName);\n        if (useConsole) {\n            console.error.apply(console, args);\n        }\n        if (userServer) {\n            for (i = 0; i < arguments.length; i++) {\n                msg = msg + arguments[i];\n            }\n            params = 'msg=' + modName + ' ERROR: ' + encodeURIComponent(msg);\n            request.open(method, serverLogger);\n            request.send(params);\n        }\n    }\n\n    function warn() {\n        var msg;\n        var i;\n        var args;\n        var params;\n        args = Array.prototype.slice.call(arguments);\n        args.splice(0, 0, modName);\n        if (useConsole) {\n            console.warn.apply(console, args);\n        }\n        if (userServer) {\n            for (i = 0; i < arguments.length; i++) {\n                msg = msg + arguments[i];\n            }\n            params = 'msg=' + modName + ' WARN: ' + encodeURIComponent(msg);\n            request.open(method, serverLogger);\n            request.send(params);\n        }\n    }\n\n    function log() {\n        var msg;\n        var i;\n        var args;\n        var params;\n        args = Array.prototype.slice.call(arguments);\n        args.splice(0, 0, modName);\n        if (useConsole) {\n            console.log.apply(console, args);\n        }\n        if (userServer) {\n            for (i = 0; i < arguments.length; i++) {\n                msg = msg + arguments[i];\n            }\n            params = 'msg=' + modName + ' LOG: ' + encodeURIComponent(msg);\n            request.open(method, serverLogger);\n            request.send(params);\n        }\n    }\n    instance = {\n        initialize: initialize,\n        error: error,\n        warn: warn,\n        log: log\n    };\n\n    setup(true);\n\n    return instance;\n};\n\nexport default Logger;\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Logger.js\n **/","import * as Const from './constants';\nimport Logger from './Logger';\n\n/**\n * @module Player\n * @description The Player is the player module used to play items.\n */\nfunction Player() {\n    let instance,\n        playlist,\n        appid,\n        screenMode,\n        autoStart,\n        loop,\n        logger,\n        backLink;\n\n    function setup() {\n        playlist = [];\n        appid = '';\n        logger = new Logger('Configuration');\n        screenMode = false;\n        autoStart = false;\n        loop = false;\n        backLink = false;\n    }\n\n    function checkPlaylist() {\n        var item = {};\n        var subItem = {};\n        var drm = {};\n        var i, j, list;\n        if (playlist === undefined) {\n            return false;\n        }\n        if (playlist.length <= 0) {\n            return false;\n        }\n        logger.log(' playlist count ', playlist.length);\n        for (i = 0; i < playlist.length; i++) {\n            item = playlist[i];\n            // check item\n            logger.log(' playlist class of item  ', i, 'is', item[Const.FJCONFIG_CLASS]);\n            if (Const.FJCONFIG_CLASSES.indexOf(item[Const.FJCONFIG_CLASS]) === -1) {\n                logger.error('BAD class Value ! ');\n                return false;\n            }\n            logger.log(' playlist type of item  ', i, 'is', item[Const.FJCONFIG_TYPE]);\n            if (Const.FJCONFIG_TYPES.indexOf(item[Const.FJCONFIG_TYPE]) === -1) {\n                logger.error('BAD type Value ! ');\n                return false;\n            }\n            logger.log(' playlist title of item  ', i, 'is', item[Const.FJCONFIG_TITLE]);\n            if (!item[Const.FJCONFIG_TITLE]) {\n                logger.error('BAD title Value ! ');\n                return false;\n            }\n            logger.log(' playlist src of item  ', i, 'is', item[Const.FJCONFIG_SRC]);\n            if (!item[Const.FJCONFIG_SRC]) {\n                logger.error('BAD src Value ! ');\n                return false;\n            }\n            logger.log(' playlist poster of item  ', i, 'is', item[Const.FJCONFIG_POSTER]);\n            logger.log(' playlist thumbs of item  ', i, 'is', item[Const.FJCONFIG_THUMBS]);\n\n            // check drm\n            drm = playlist[Const.FJCONFIG_DRM];\n            if (drm !== undefined) {\n                if (Const.FJCONFIG_DRM_SCHEMES.indexOf(drm[Const.FJCONFIG_DRM_SCHEME]) === -1) {\n                    logger.error('BAD DRM Scheme Value ! ', drm[Const.FJCONFIG_DRM_SCHEME]);\n                    return false;\n                }\n                if (drm[Const.FJCONFIG_DRM_LICENSE_SERVER]) {\n                    logger.log(' playlist Server License of item  ', i, 'is', drm[Const.FJCONFIG_DRM_LICENSE_SERVER]);\n                } else {\n                    logger.error('Empty Server License for  DRM Scheme  ! ');\n                    return false;\n                }\n                logger.log(' playlist Drm Herders on Request License  of item  ',\n                    i, drm[Const.FJCONFIG_DRM_HEADER_LICENSE_REQUEST]);\n                logger.log(' playlist Drm Herders on Request Segments  of item  ',\n                    i, drm[Const.FJCONFIG_DRM_HEADER_SEGMENTS_REQUEST]);\n            }\n            // check subtitles\n            list = item[Const.FJCONFIG_SUBTITLES];\n            if ((list !== undefined) && (list.length > 0)) {\n                for (j = 0; j < list.length; j++) {\n                    subItem = list[j];\n                    if (subItem[Const.FJCONFIG_SUB_LABEL]) {\n                        logger.log(' playlist Subtitle label ', j, ' of item  ', i, 'is',\n                            subItem[Const.FJCONFIG_SUB_LABEL]);\n                    } else {\n                        logger.error('Empty Subtitle label ', j, ' of item ! ', i);\n                        return false;\n                    }\n                    if (subItem[Const.FJCONFIG_SUB_LANG]) {\n                        logger.log(' playlist Subtitle lang ', j, ' of item  ', i, 'is',\n                            subItem[Const.FJCONFIG_SUB_LANG]);\n                    } else {\n                        logger.error('Empty Subtitle lang ', j, ' of item ! ', i);\n                        return false;\n                    }\n                    if (subItem[Const.FJCONFIG_SUB_SRC]) {\n                        logger.log(' playlist Subtitle src ', j, ' of item  ', i, 'is',\n                            subItem[Const.FJCONFIG_SUB_SRC]);\n                    } else {\n                        logger.error('Empty Subtitle src ', j, ' of item ! ', i);\n                        return false;\n                    }\n                }\n            }\n\n            // check overlays\n            list = item[Const.FJCONFIG_OVERLAYS];\n            if ((list !== undefined) && (list.length > 0)) {\n                for (j = 0; j < list.length; j++) {\n                    subItem = list[j];\n                    if (subItem[Const.FJCONFIG_OVER_DATA]) {\n                        logger.log(' playlist Overlay data ', j, ' of item  ', i, 'is',\n                            subItem[Const.FJCONFIG_OVER_DATA]);\n                    } else {\n                        logger.error('Empty Overlay data', j, ' of item ! ', i);\n                        return false;\n                    }\n                    if (subItem[Const.FJCONFIG_OVER_URL]) {\n                        logger.log(' playlist Overlay url ', j, ' of item  ', i, 'is',\n                            subItem[Const.FJCONFIG_OVER_URL]);\n                    } else {\n                        logger.error('Empty Overlay url', j, ' of item ! ', i);\n                        return false;\n                    }\n                    if (subItem[Const.FJCONFIG_OVER_DURATION]) {\n                        if ((subItem[Const.FJCONFIG_OVER_DURATION] ===\n                                parseInt(subItem[Const.FJCONFIG_OVER_DURATION], 10))) {\n                            logger.log(' playlist Overlay duration ', j, ' of item  ', i, 'is',\n                                subItem[Const.FJCONFIG_OVER_DURATION]);\n                        } else {\n                            logger.error('Empty Overlay duration ', j, ' of item ! ', i, 'is not integer !');\n                            return false;\n                        }\n                    } else {\n                        logger.error('Empty Overlay duration ', j, ' of item ! ', i);\n                        return false;\n                    }\n                    if (subItem[Const.FJCONFIG_OVER_SHOW_AT]) {\n                        if ((subItem[Const.FJCONFIG_OVER_SHOW_AT] ===\n                                parseInt(subItem[Const.FJCONFIG_OVER_SHOW_AT], 10))) {\n                            logger.log(' playlist Overlay show at ', j, ' of item  ', i, 'is',\n                                subItem[Const.FJCONFIG_OVER_SHOW_AT]);\n                        } else {\n                            logger.error('Empty Overlay show at ', j, ' of item ! ', i, 'is not integer !');\n                            return false;\n                        }\n                    } else {\n                        logger.error('Empty Overlay show at ', j, ' of item ! ', i);\n                        return false;\n                    }\n                }\n            }\n        }\n        logger.log('playlist cofiguration is ok ');\n        return true;\n    }\n\n    function initialize(fjplaylist, fjappid, fjscreenMode, fjbackLink, fjloop, fjautoStart) {\n        if (fjautoStart === true || fjautoStart === false) {\n            autoStart = fjautoStart;\n        } else {\n            autoStart = false;\n        }\n        if (fjloop === true || fjloop === false) {\n            loop = fjloop;\n        } else {\n            loop = false;\n        }\n        if (fjbackLink === true || fjbackLink === false) {\n            backLink = fjbackLink;\n        } else {\n            backLink = false;\n        }\n        playlist = fjplaylist;\n        screenMode = fjscreenMode;\n        appid = fjappid;\n        return checkPlaylist();\n    }\n\n    function toString() {\n        return 'loop:' + loop + ', autostart:' + autoStart +\n            ', appid:' + appid + ', screenMode:' + screenMode + ', backLink:' + backLink;\n    }\n\n    function getItemsNbr() {\n        return playlist.length;\n    }\n\n    instance = {\n        initialize: initialize,\n        toString: toString,\n        getItemsNbr: getItemsNbr\n    };\n\n    setup();\n\n    return instance;\n};\n\nexport default Player;\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Player.js\n **/","const VERSION = '0.2.0';\n\nexport function getVersionString() {\n    return VERSION;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Version.js\n **/"],"sourceRoot":""}